events {
    # No of concurrent connections opened at a time by a worker node
    worker_connections 1024;
}
# Error logging to stderr
error_log stderr;

http {
    access_log /dev/stdout;
    
    include generic_conf/setup_logging.conf;
    
    include generic_conf/lua_path_setup.conf;
    include generic_conf/basic_vts_setup.conf;
    include generic_conf/setup_cache.conf;

    upstream backend {
        server backend:8080
        keepalive 10;  # connection pool for reuse
    }

    server  {
        listen 8080;
        # Where all the requests handling is done
        location / {

            set_by_lua_block $cache_key {
                return ngx.var.uri
            }
            access_by_lua_block {
                local edge = require "edge"
                edge.simulate_load()
            }
            proxy_pass http://backend
            include generic_conf/define_cache.conf
            add_header X-Edge Server;
        }

        include generic_conf/basic_vts_location.conf
    }
    
}
